package com.sensei.search.req.protobuf;

option java_package = "com.sensei.search.req.protobuf";
option java_outer_classname = "SenseiProtos";

option optimize_for = SPEED;

enum BooleanOperator {
  OR = 1;
  AND = 2;
};

message StringProperties {
  repeated string key = 1;
  repeated string value = 2;
};

message BrowseSelection {
  optional BooleanOperator operator = 1;
  optional string field_name = 2;
  repeated string value = 3;
  repeated string not_value = 4;
  optional StringProperties properties = 5;
};

message Locale {
  optional string language = 1;
  optional string country = 2;
  optional string variant = 3;
};

message SortField {
  optional string field = 1;
  optional int32 type = 2;
  optional Locale locale = 3;
  optional bool reverse = 4;

  // parser, comparator, and missing source are impossible
};

enum SortOrder {
  ASCENDING = 1;
  DESCENDING = 2;
  CUSTOM = 3;
}

enum FacetComparator {
  HIT_COUNT = 1;
  VALUE = 2;
}

message FacetSpec {
  optional SortOrder order_by = 1;
  optional int32 max = 2;
  optional bool expand_selection = 3;
  optional int32 min_count = 4;
  // TODO: Comparator factory
  optional StringProperties properties = 6;
  optional string field = 7;
};

enum SenseiMapReduceFunction {
   AVG = 1;
   COUNT_GROUP_BY = 2;
   DISTINCT_COUNT = 3;
   DISTINCT_UID = 4;
   FACET_COUNTS = 5;
   HASH_SET_DISTINCT_COUNT = 6;
   MAX = 7;
   MIN = 8;
   SUM = 9;
   // TODO: ANY LEFT?
};

message BooleanParams {
  optional string key = 1;
  repeated bool value = 2;
}

message IntParams {
  optional string key = 1;
  repeated int32 value = 2;
}

message LongParams {
  optional string key = 1;
  repeated int64 value = 2;
}

message StringParams {
  optional string key = 1;
  repeated string value = 2;
}

message DoubleParams {
  optional string key = 1;
  repeated double value = 2;
}

message ByteArrayParams {
  optional string key = 1;
  optional bytes value = 2;
}

message FacetHandlerInitializerParam {
  repeated BooleanParams boolean_param = 1;
  repeated IntParams int_param = 2;
  repeated LongParams long_param = 3;
  repeated StringParams string_param = 4;
  repeated DoubleParams double_param = 5;
  repeated ByteArrayParams byte_param = 6;
};

message FacetHandlerInitializerParams {
  repeated string key = 1;
  repeated FacetHandlerInitializerParam value = 2;
};

message SenseiProtoRequest {
  repeated BrowseSelection selection = 1;
  repeated SortField sort_spec = 2;
  repeated FacetSpec facet_spec = 3;
  optional string sensei_query = 4;
  optional int32 offset = 5;
  optional int32 count = 6;
  optional bool fetch_stored_fields = 7;
  optional bool fetch_stored_value = 8;
  optional FacetHandlerInitializerParams facet_handler_param = 9;
  repeated int32 partitions = 10;
  optional bool explain = 11;
  optional string route_param = 12;
  repeated string group_by = 13;
  repeated string distinct = 15;
  optional int32 max_per_group = 16;
  repeated string term_vectors_to_fetch = 17;
  repeated string select_list = 18;
  optional SenseiMapReduceFunction map_reduce = 19;
  repeated string map_reduce_columns = 20;
};

message SenseiError {

};

message Explanation {
  optional float value = 1;
  optional string description = 2;
  repeated Explanation details = 3;
}

message TermFrequencyVector {
  repeated string terms = 1;
  repeated int32 freqs = 2;
}

enum JavaPrimitives {
  BYTE = 1;
  CHAR = 2;
  INT = 3;
  LONG = 4;
  FLOAT = 5;
  DOUBLE = 6;
  BOOLEAN = 7;
  SHORT = 8;
  STRING = 9;
};

message SenseiHit {
  optional float score = 1;
  optional int32 doc_id = 2;
  repeated StringParams field_values = 3;
  repeated JavaPrimitives field_type = 4;
  optional int32 group_position = 5;
  optional string group_field = 6;
  optional string group_value = 7;
  optional int32 group_hit_count = 8;
  repeated SenseiHit group_hits = 9;
  optional Explanation explanation = 10;
  optional int64 uid = 11;
  optional string src_data = 12;
  optional bytes stored_value = 13;
}

message SenseiProtoResult {
  optional string parsed_query = 1;
  repeated SenseiError error = 2;
  repeated SenseiHit hit = 3;
};