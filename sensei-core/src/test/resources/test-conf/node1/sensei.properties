# sensei node parameters
sensei.node.id=1
sensei.node.partitions=0,1

# sensei network server parameters
sensei.server.port=1223
sensei.server.requestThreadCorePoolSize=20
sensei.server.requestThreadMaxPoolSize=70
sensei.server.requestThreadKeepAliveTimeSecs=300

# sensei cluster parameters
sensei.cluster.name=testCluster
sensei.cluster.client-name=server1
sensei.cluster.url=localhost:2181
sensei.cluster.timeout=30000

# sensei indexing parameters
sensei.index.directory = sensei-index-test

sensei.index.batchSize = 100000
sensei.index.batchDelay = 30000
sensei.index.maxBatchSize = 100000
sensei.index.realtime = true
sensei.index.freshness = 0

# index manager parameters

sensei.index.manager.default.maxpartition.id = 2
sensei.index.pruner.class=com.senseidb.indexing.TimeBasedIndexSelector
sensei.index.pruner.facetName=groupid_range

sensei.gateway.class=com.senseidb.gateway.file.LinedFileDataProviderMockBuilder
sensei.gateway.file.path = src/test/resources/data/test_data.json

sensei.externalRelevanceObj.class=com.senseidb.search.relevance.ExternalRelevanceDataExample

# plugins: from plugins.xml

# analyzer, default: StandardAnalyzer
# sensei.index.analyzer = myanalyzer

# similarity, default: DefaultSimilarity
# sensei.index.similarity = mysimilarity

# sensei 

# broker properties
sensei.broker.port = 8079
sensei.broker.minThread = 50
sensei.broker.maxThread = 100
sensei.broker.maxWaittime = 2000
sensei.broker.allowPartialMerge = true

sensei.broker.webapp.path=src/main/webapp
sensei.search.cluster.name = testCluster
sensei.search.cluster.client-name = server1
sensei.search.cluster.zookeeper.url = localhost:2181
sensei.search.cluster.zookeeper.conn.timeout = 30000

sensei.activity.config.flushBufferSize = 50001
sensei.activity.config.flushBufferMaxDelayInSeconds = 16
sensei.activity.config.purgeJobFrequencyInMinutes = 0
sensei.activity.config.undeletableBufferSize = 500

sensei.federated.broker.class=com.senseidb.search.node.broker.LayeredBroker
sensei.federated.broker.clusters=testCluster,testCluster
# We create the term int list factory differently in the two nodes to have more coverage.
my.custom.group_id_fetcher_factory.class = com.senseidb.test.plugin.VirtualGroupIdFactory$GroupIdFetcherFactory
my.custom.facets.virtual_groupid.class = com.senseidb.plugin.VirtualSimpleFacetHandlerSenseiPluginFactory
my.custom.facets.virtual_groupid.termListFactory = int
my.custom.facets.virtual_groupid.facetDataFetcher = group_id_fetcher_factory
my.custom.facets.virtual_groupid.depends = groupid

custom.plugins.spring.class=com.senseidb.conf.SpringSenseiPluginFactory
custom.plugins.spring.returnedClass=com.senseidb.svc.impl.AbstractSenseiCoreService
custom.plugins.spring.springFile=plugins.xml
sensei.plugin.services.list=custom.plugins.spring

my.custom.facets.virtual_groupid_fixedlengthlongarray.class=com.senseidb.test.plugin.VirtualGroupIdFactory
my.custom.facets.virtual_groupid_fixedlengthlongarray.typeProp=fixedlengthlongarray


#Sensei plugin factory returns the list of custom facets
my.custom.facets.other_custom_facets.class=com.senseidb.test.plugin.OtherCustomFacetsFactory
# the list of beans might be referenced both by simple name and the full prefix
#Sensei plugin factory returns the list of custom facets
custom.facets.spring.class=com.senseidb.conf.SpringSenseiPluginFactory
custom.facets.spring.returnedClass=com.browseengine.bobo.facets.FacetHandler, com.browseengine.bobo.facets.RuntimeFacetHandlerFactory
custom.facets.spring.springFile=custom-facets.xml
# the list of beans might be referenced both by simple name and the full prefix
sensei.custom.facets.list= custom.facets.spring, my.custom.facets.other_custom_facets, my.custom.facets.virtual_groupid, my.custom.facets.virtual_groupid_fixedlengthlongarray
sensei.index.manager.default.eventsPerMin = 600000 
