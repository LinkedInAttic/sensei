<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Sensei Configuration</title>

  <section>
    <title>Overview</title>

    <para>A Sensei node is configured by a set of files. These files describe
    a Sensei node in terms of data models, server configuration, indexing
    tuning parameters, customizations, etc.</para>

    <para>This chapter aims to describe how different parts are pieced
    together via these configuration files.</para>
  </section>

  <section xml:id="sect-data-modeling">
    <title>Data Modeling</title>

    <para>Data models are described in the <filename>schema.xml</filename>
    file. The XSD definition of this XML file can be found from
    http://javasoze.github.com/sensei/schema/sensei-schema.xsd.</para>

    <para>The schema file is composed by 2 sections:</para>

    <orderedlist spacing="compact">
      <listitem>
        <para>Table schema</para>
      </listitem>

      <listitem>
        <para>Facet schema</para>
      </listitem>
    </orderedlist>

    <section>
      <title>Table Schema<indexterm>
          <primary>table schema</primary>
        </indexterm></title>

      <para>A Sensei instance can be viewed as a giant table with many columns
      and many rows. The concept of such table directly correlates to that of
      traditional RDBMS's.</para>

      <para>A table may have the following attributes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis role="bold">uid</emphasis> (mandatory) - defines the
          name of the primary key field. This must be of type
          <literal>long</literal>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">delete-field</emphasis> (optional) -
          defines the field that would indicate a delete event (we will get
          back to this later).</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">skip-field</emphasis> (optional) -
          defines the field that would indicate a skipping event (we will get
          back to this later).</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">src-data-store</emphasis> (optional) -
          defines the format of how the source data is saved. Currently the
          only supported value is "<literal>lucene</literal>".</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">src-data-field</emphasis> (optional) -
          specifies the field name used to keep the original source data
          value.</para>

          <note>
            <para>If this attribute is not specified, the default value is set
            to "<literal>src_data</literal>". If this field is not set by the
            data source filter, the string representation of the original data
            source is saved in this field by default. If part of the source
            data or a modified version of the source data is to be saved in
            the index, then you need to set this field using the value you
            prefer in the data source filter.</para>
          </note>
        </listitem>

        <listitem>
          <para><emphasis role="bold">compress-src-data</emphasis> (optional)
          - defines if the source data is compressed.</para>
        </listitem>
      </itemizedlist>

      <para>A table is also composed of a set of columns. Each column has a
      name and a type. Below is the list of supported types:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis role="bold">string</emphasis> - value is a string,
          e.g. "<literal>abc</literal>"</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">int</emphasis> - integer value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">long</emphasis> - long value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">short</emphasis> - short value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">float</emphasis> - a floating point
          value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">double</emphasis> - double value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">char</emphasis> - a character</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">date</emphasis> - a date value, which
          must be accompanied by a format string to be used to parse a date
          string</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">text</emphasis> - a searchable text
          segment, standard Lucene indexing specification can also be
          specified here, e.g. <literal>index="ANALYZED"</literal>,
          <literal>termvector="NO"</literal>.</para>
        </listitem>
      </itemizedlist>

      <para>A column that is not of type "text" is considered a
      <emphasis>meta</emphasis> column. Any meta column can be specified to be
      either <emphasis>single</emphasis> (default) or
      <emphasis>multi</emphasis>. When a column is specified to be
      <emphasis>multi</emphasis>, e.g. <literal>multi="true"</literal>, it
      means that, given a row, the column can have more than one value. A
      delimited string can be provided to help the indexer parse the values
      (default delimiter is "<literal>,</literal>"). To specify a different
      delimiter, say "<literal>:</literal>", we can simply set
      <literal>delimiter=":"</literal>)</para>

      <para>Here is an example of the table schema (see
      https://github.com/javasoze/sensei/blob/master/conf/schema.xml):</para>

      <programlisting>  &lt;table uid="id" delete-field="" skip-field=""&gt;
    &lt;column name="color" type="string" /&gt;
    &lt;column name="category" type="string" /&gt;
    &lt;column name="city" type="string" /&gt;
    &lt;column name="makemodel" type="string" /&gt;
    &lt;column name="year" type="int" /&gt;
    &lt;column name="price" type="float" /&gt;
    &lt;column name="mileage" type="int" /&gt;
    &lt;column name="tags" type="string" multi="true" delimiter=","/&gt;
    &lt;column name="contents" type="text" index="ANALYZED"
            store="NO" termvector="NO"/&gt;
  &lt;/table&gt;</programlisting>

      <section>
        <title>JSON<indexterm>
            <primary>JSON</primary>
          </indexterm></title>

        <para>By default, data objects inserted into Sensei are JSON
        objects.</para>

        <para><emphasis role="bold">Example</emphasis>:</para>

        <para>Given the following table definition:</para>

        <programlisting>  &lt;table uid="id"&gt;
    &lt;column name="color" type="string" /&gt;
    &lt;column name="year" type="int" /&gt;
    &lt;column name=tag" type="string" multi="true" /&gt;
    &lt;column name="description" type="text" index="ANALYZED" store="NO" /&gt;
  &lt;/table&gt;
</programlisting>

        <para>The following table shows as an example how a JSON object is
        mapped into the table:</para>

        <para><emphasis role="bold">JSON object</emphasis></para>

        <programlisting>  {
    id:1
    color:"red",
    year:2000,
    tag:"cool,leather",
    description:"i love this car"
  }</programlisting>

        <para><emphasis role="bold">Table view</emphasis></para>

        <informaltable border="2" cellpadding="6" cellspacing="0"
                       frame="hsides" rules="groups">
          <colgroup>
            <col align="left" />

            <col align="left" />

            <col align="left" />

            <col align="left" />

            <col align="left" />
          </colgroup>

          <thead>
            <tr>
              <th align="left" scope="col">id</th>

              <th align="left" scope="col">color</th>

              <th align="left" scope="col">year</th>

              <th align="left" scope="col">tag</th>

              <th align="left" scope="col">description</th>
            </tr>
          </thead>

          <tbody>
            <tr>
              <td align="left">1</td>

              <td align="left">red</td>

              <td align="left">2000</td>

              <td align="left">cool, leather</td>

              <td align="left">i love this car</td>
            </tr>
          </tbody>
        </informaltable>
      </section>

      <section>
        <title>Deletes<indexterm>
            <primary>delete</primary>
          </indexterm></title>

        <para>To delete a row from Sensei, simply insert a data object with
        the specified delete-field set to true.</para>

        <para><emphasis role="bold">Example:</emphasis></para>

        <para>Given the table schema:</para>

        <programlisting>  &lt;table uid="id" delete-field="isDelete"&gt;
  ...
  &lt;/table&gt;
</programlisting>

        <para>The following JSON object would delete the row where
        id=5:</para>

        <programlisting>  {
    id:5,
    isDelete:"true"
  }</programlisting>
      </section>

      <section>
        <title>Skips<indexterm>
            <primary>skip</primary>
          </indexterm></title>

        <para>In cases where runtime logic decides whether a data object
        should be skipped, the skip field can be useful.</para>

        <para><emphasis role="bold">Example:</emphasis></para>

        <para>Given the table schema:</para>

        <programlisting>  &lt;table uid="id" skip-field="isSkip"&gt;
  ...
  &lt;/table&gt;</programlisting>

        <para>The following JSON object would be skipped from indexing:</para>

        <programlisting>  {
    id:7,
    isSkip:"true"
  }</programlisting>
      </section>

      <section>
        <title>Source JSON<indexterm>
            <primary>source JSON</primary>
          </indexterm></title>

        <para>For many cases, you may want to save the original source data
        from which we extract all the fields into the index. You can do this
        by setting the attributes <emphasis
        role="bold">src-data-store</emphasis> and <emphasis
        role="bold">src-data-field</emphasis>.</para>
      </section>
    </section>

    <section>
      <title>Facet Schema<indexterm>
          <primary>facet schema</primary>
        </indexterm></title>

      <para>The second section is the facet schema, which defines how columns
      can be queried.</para>

      <para>If we think of the table section defines how data is added into
      Sensei, then the facet section describes how these data can be
      queried.</para>

      <para>The facet sections is composed of a set of facet
      definitions.</para>

      <para>A facet definition requires a name and a type.</para>

      <para>Possible types:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis role="bold">simple</emphasis>: simplest facet, 1 row
          = 1 discrete value</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">path</emphasis>: hierarchical facet,
          e.g. a/b/c</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">range</emphasis>: range facet, used to
          support range queries</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">multi</emphasis>: 1 row = N discrete
          values</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">compact-multi</emphasis>: similar to
          multi, but possible values are limited to 32</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">histogram</emphasis><indexterm>
              <primary>histogram facet handler</primary>
            </indexterm>: similar to a range facet, but a histogram facet
          automatically calculates the distribution of facet values over a
          predefined series of ranges with the same size. (A histogram facet
          depends on another numeric facet, and it requires several mandatory
          parameters, see <xref linkend="sect-histogram-parameters" />.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">timeRange</emphasis><indexterm>
              <primary>TimeRange facet handler</primary>
            </indexterm>: also similar to a range facet, it is a dynamic facet
          handler, that allows to search for documents, that have the time
          column value within the specified range from now,see <xref
          linkend="sect-timerange-parameters" />.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">custom</emphasis>: any user defined
          facet type</para>
        </listitem>
      </itemizedlist>

      <para>Example: <link
      xlink:href="https://github.com/javasoze/sensei/blob/master/conf/schema.xml">https://github.com/javasoze/sensei/blob/master/conf/schema.xml</link></para>

      <section>
        <title>Optional Attributes<indexterm>
            <primary>facet schema attribute</primary>
          </indexterm></title>

        <section>
          <title>Column<indexterm>
              <primary>facet schema attribute</primary>

              <secondary>column</secondary>
            </indexterm></title>

          <para>The column attribute references the column names defined in
          the table section. By default, the value of the
          <literal>name</literal> attribute is used.</para>

          <para>This can be useful if you want to name the facet name to be
          different from the defined column name, or if you want to have
          multiple facets defined on the same column.</para>
        </section>

        <section>
          <title>Depends<indexterm>
              <primary>facet schema attribute</primary>

              <secondary>depends</secondary>
            </indexterm></title>

          <para>This is a comma delimited string denoting a set of facet names
          this facet is to be depended on.</para>

          <para>When attribute <literal>depends</literal> is specified, Sensei
          guarantees that the depended facets are loaded before this
          facet.</para>

          <para>This is also how Composite Facets are constructed. (Another
          advanced topic).</para>
        </section>

        <section>
          <title>Dynamic<indexterm>
              <primary>facet schema attribute</primary>

              <secondary>dynamic</secondary>
            </indexterm></title>

          <para>Dynamic facets are useful when data layout is not known until
          query time.</para>

          <para>Some examples:</para>

          <itemizedlist spacing="compact">
            <listitem>
              <para>Searcher's social network</para>
            </listitem>

            <listitem>
              <para>Dynamic time ranges from when the search request is
              issued</para>
            </listitem>
          </itemizedlist>

          <para>This is another advanced topic to be discussed later.</para>
        </section>
      </section>

      <section xml:id="sect-facet-parameters">
        <title>Parameters</title>

        <para>A facet can be configured via a list of parameters. Parameters
        are needed for a facet under some situations, for example:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>For path facets, separator strings can be configured</para>
          </listitem>

          <listitem>
            <para>For range facets, predefined ranges can be configured</para>
          </listitem>
        </itemizedlist>

        <para>The parameters can be specified via element
        <literal>params</literal>, which contains a list of elements called
        <literal>param</literal>. For each <literal>param</literal>, two
        attributes need to be specified: <literal>name</literal> and
        <literal>value</literal>.</para>

        <para>How parameters are interpreted and used is dependent on the
        facet type.</para>

        <para>Here is an example of a facet with a list of predefined
        ranges:</para>

        <programlisting>  &lt;facet name="year" type="range"&gt;
    &lt;params&gt;
      &lt;param name="range" value="1993-1994"/&gt;
      &lt;param name="range" value="1995-1996"/&gt;
      &lt;param name="range" value="1997-1998"/&gt;
      &lt;param name="range" value="1999-2000"/&gt;
      &lt;param name="range" value="2001-2002"/&gt;
    &lt;/params&gt;
  &lt;facet&gt;</programlisting>

        <section xml:id="sect-histogram-parameters">
          <title>Parameters for Histogram Facets</title>

          <para>A histogram facet requires 5 parameters:</para>

          <itemizedlist>
            <listitem>
              <para><emphasis role="bold">datatype</emphasis>: the data type.
              Only the following 5 numeric data types are allowed:</para>

              <orderedlist spacing="compact">
                <listitem>
                  <para>int</para>
                </listitem>

                <listitem>
                  <para>short</para>
                </listitem>

                <listitem>
                  <para>long</para>
                </listitem>

                <listitem>
                  <para>float</para>
                </listitem>

                <listitem>
                  <para>double</para>
                </listitem>
              </orderedlist>
            </listitem>

            <listitem>
              <para><emphasis role="bold">datahandler</emphasis>: this is the
              name of the facet that the histogram facet depends on. The
              values of this facet are used to generate the distribution
              information.</para>
            </listitem>

            <listitem>
              <para><emphasis role="bold">start</emphasis>: the minimum value
              of the facet.</para>
            </listitem>

            <listitem>
              <para><emphasis role="bold">end</emphasis>: the maximum value of
              the facet.</para>
            </listitem>

            <listitem>
              <para><emphasis role="bold">unit</emphasis>: the unit value used
              to divide facet values into ranges.</para>
            </listitem>
          </itemizedlist>

          <para>Here is an example configuration for a histogram facet over a
          facet called <literal>score</literal>:</para>

          <programlisting>  &lt;facet name="scoreHistogram" type="histogram"&gt;
    &lt;params&gt;
      &lt;param name="datatype" value="int"/&gt;
      &lt;param name="datahandler" value="score"/&gt;
      &lt;param name="start" value="0"/&gt;
      &lt;param name="end" value="100"/&gt;
      &lt;param name="unit" value="10"/&gt;
    &lt;/params&gt;
  &lt;/facet&gt;</programlisting>
        </section>

        <section xml:id="sect-timerange-parameters">
          <title>Parameters for TimeRange Facets</title>

          <para>A TimeRange facet requires either column or depends
          parameter:</para>

          <itemizedlist>
            <listitem>
              <para><emphasis role="bold">column</emphasis>: this is the
              reference for the column, that represents the timestamp in
              milliseconds. Under the hood Sensei will create another range
              facetHandler for this column</para>
            </listitem>

            <listitem>
              <para><emphasis role="bold">depends</emphasis>: this is the name
              of the facet that the TimeRange facet depends on. The values of
              this facet are used to evaluate if the document needs to be
              matched.</para>
            </listitem>

            <listitem>
              <para><emphasis role="bold">param range</emphasis>: this the
              format of range string is dddhhmmss. (ddd: days (000-999), hh :
              hours (00-23), mm: minutes (00-59), ss: seconds (00-59)) It
              represents the timerange used by the facet handler.</para>
            </listitem>
          </itemizedlist>

          <para>Here is an example configuration for a time facet over a facet
          called <literal>time</literal>:. It will match the documents that
          have the time column not older than 12 hours</para>

          <programlisting>      &lt;facet name="timeRange"  type="dynamicTimeRange" depends="time" dynamic="true"&gt;
        &lt;params&gt;
            &lt;param name="range" value="000120000" /&gt;   
        &lt;/params&gt;
      &lt;/facet&gt;</programlisting>
        </section>
      </section>

      <section>
        <title>Customized Facets</title>

        <para>We understand we cannot possibly cover all use cases using a
        short list of predefined facet handlers. It is necessary to allow
        users to define their own customized facets for different
        reasons.</para>

        <para>If a customized facet handler is required for a column (or
        multiple columns), you can set the facet type to
        "<literal>custom</literal>", and declare a correspodning property
        handler in file <filename>sensei.properties</filename>.</para>

        <para>For example, if a customized facet called
        <literal>time</literal> is declared in <filename>schema.xml</filename>
        like this:</para>

        <programlisting>  &lt;facet name="time" type="custom" dynamic="false"/&gt;</programlisting>

        <para>and the implementation of the facet handler is in class
        <literal>com.example.facets.TimeFacetHandler</literal>, then you
        should include following lines in file
        <filename>sensei.properties</filename>: <footnote>
            <para>For the more detailed information see <xref
            linkend="sect-custom-facets-conf" />.</para>
          </footnote></para>

        <programlisting>  my.custom.facets.time.class = com.example.facets.TimeFacetHandler"
  sensei.custom.facets.list=..., my.custom.facets.time</programlisting>

        <para>The property of the bean should match the reference at
        sensei.custom.facets.list.</para>
      </section>
    </section>
  </section>

  <section>
    <title>System Configuration</title>

    <para>A Sensei node is configured via the
    <filename>sensei.properties</filename>, which uses the format supported by
    Apache Commons Configuration (http:/commons.apache.org/). This file
    consists of the following five parts:</para>

    <orderedlist spacing="compact">
      <listitem>
        <para><emphasis role="bold">server</emphasis>: port to listen on, rpc
        parameters, etc.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">cluster</emphasis>: cluster manager,
        sharding, request routing, etc.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">indexing</emphasis>: data interpretation,
        tokenization, indexer type, etc.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">broker and client</emphasis>: e.g. entry
        into Sensei system</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">plugins</emphasis>: e.g. customized facet
        handlers</para>
      </listitem>
    </orderedlist>

    <para>Below is the configuration file for the demo (available from <link
    xlink:href="https://github.com/javasoze/sensei/blob/master/conf/sensei.properties">https://github.com/javasoze/sensei/blob/master/conf/sensei.properties</link>):</para>

    <programlistingco>
      <areaspec>
        <area coords="1 26" units="linecolumn" xml:id="sensei-config-server"></area>

        <area coords="11 29" units="linecolumn" xml:id="sensei-config-cluster"></area>

        <area coords="16 30" units="linecolumn"
              xml:id="sensei-config-indexing"></area>

        <area coords="31 29" units="linecolumn" xml:id="sensei-config-plugins"></area>

        <area coords="60 21" units="linecolumn" xml:id="sensei-config-broker"></area>
      </areaspec>

      <programlisting># sensei node parameters
sensei.node.id=1
sensei.node.partitions=0,1

# sensei network server parameters
sensei.server.port=1234
sensei.server.requestThreadCorePoolSize=20
sensei.server.requestThreadMaxPoolSize=70
sensei.server.requestThreadKeepAliveTimeSecs=300

# sensei cluster parameters
sensei.cluster.name=sensei
sensei.cluster.url=localhost:2181
sensei.cluster.timeout=30000

# sensei indexing parameters
sensei.index.directory = index/cardata

sensei.index.batchSize = 10000
sensei.index.batchDelay = 300000
sensei.index.maxBatchSize = 10000
sensei.index.realtime = true
sensei.index.freshness = 10000

# index manager parameters

sensei.index.manager.default.maxpartition.id = 1
sensei.index.manager.default.type = file
sensei.index.manager.default.file.path = data/cars.json

# plugins: from plugins.xml

# analyzer, default: StandardAnalyzer
# sensei.index.analyzer.class = org.apache.lucene.analysis.WhitespaceAnalyzer

# similarity, default: DefaultSimilarity
# sensei.index.similarity.class = com.sensei.plugin.example.MyCustomSimilarity

# indexer type, zoie/hourglass/&lt;custom name&gt;

sensei.indexer.type=zoie

#extra parameters for hourglass

#sensei.indexer.hourglass.schedule

# retention
#sensei.indexer.hourglass.trimthreshold

# frequency for a roll, minute/hour/day
#sensei.indexer.hourglass.frequency

# sensei
# version comparator, default: ZoieConfig.DefaultVersionComparator
# sensei.version.comparator.class = com.linkedin.zoie.impl.indexing.ZoieConfig$DefaultVersionComparator

# extra services
sensei.plugin.services.list =

# broker properties
sensei.broker.port = 8080
sensei.broker.minThread = 50
sensei.broker.maxThread = 100
sensei.broker.maxWaittime = 2000

sensei.broker.webapp.path=src/main/webapp
sensei.search.cluster.name = sensei
sensei.search.cluster.zookeeper.url = localhost:2181
sensei.search.cluster.zookeeper.conn.timeout = 30000
sensei.search.cluster.network.conn.timeout = 1000
sensei.search.cluster.network.write.timeout = 150
sensei.search.cluster.network.max.conn.per.node = 5
sensei.search.cluster.network.stale.timeout.mins = 10
sensei.search.cluster.network.stale.cleanup.freq.mins = 10

# custom router factory
# sensei.search.router.factory.class = com.sensei.plugin.example.myRouterFactory
</programlisting>

      <calloutlist>
        <callout arearefs="sensei-config-server">
          <para>This lines starts the server configurations.</para>
        </callout>

        <callout arearefs="sensei-config-cluster">
          <para>This lines starts the cluster configurations.</para>
        </callout>

        <callout arearefs="sensei-config-indexing">
          <para>This lines starts the indexing configurations.</para>
        </callout>

        <callout arearefs="sensei-config-plugins">
          <para>This lines starts the plugins configurations.</para>
        </callout>

        <callout arearefs="sensei-config-broker">
          <para>This lines starts the broker and client configurations.</para>
        </callout>
      </calloutlist>
    </programlistingco>

    <para>Let's take a brief look, how the class properties are loaded into
    Sensei.</para>

    <section>
      <title>Sensei plugin infrastructure</title>

      <section>
        <title>Loading class properties</title>

        <para>On the startup Sensei will scan the config for all the
        properties with the suffix '.class'. It will try to load the specified
        classes from its classpath and instantiate it by calling the no-arg
        constructor. If the instantiated object implements the
        com.sensei.plugin.SenseiPlugin interface, the init and the start
        callback methods would be called</para>

        <programlisting>public interface SenseiPlugin {
     public void init(Map&lt;String, String&gt; config);
     public void start();
     public void stop(); 
}</programlisting>

        <para>The config properties are taken from the sensei.properties and
        they should have the same prefix as the corresponding key with the
        '.class' suffix</para>

        <programlisting>#Custom implementation of the sensei load balancer strategy
sensei.search.router.factory.class=com.sensei.plugin.example.MyCustomRouterFactory
sensei.search.router.factory.customType=round-robin	  </programlisting>

        <para>Sometimes we would need to provide a reference of the class that
        doesn't have the no-arg default constructor We may implement the
        SenseiPluginFactory interface for this: in the config:</para>

        <programlisting>sensei.index.analyzer.class = com.sensei.plugin.example.LuceneStandardAnalyzerFactory
sensei.index.analyzer.version = LUCENE_34	</programlisting>

        <para>in the code:</para>

        <programlisting>public class LuceneStandardAnalyzerFactory implements SenseiPluginFactory&lt;StandardAnalyzer&gt; {
    @Override
    public StandardAnalyzer getBean(Map&lt;String, String&gt; initProperties, String fullPrefix, SenseiPluginRegistry pluginRegistry) {
           return new StandardAnalyzer(Version.valueOf(initProperties.get("version")));
      }
}  </programlisting>
      </section>

      <section xml:id="sect-custom-facets-conf">
        <title>Defining custom facet handlers in the configuration</title>

        <para>The custom facets may be defined in the sensei.properties and
        referenced from the schema defined in the schema.xml file:</para>

        <para>In the schema.xml:</para>

        <programlisting>&lt;facets&gt;
      &lt;facet name="groupid" type="custom" /&gt;
      &lt;facet name="tags" type="custom" /&gt;
      &lt;facet name="virtual_groupid" type="custom" /&gt;
      &lt;facet name="virtual_groupid_fixed" type="custom" /&gt;
&lt;/facets&gt;  </programlisting>

        <para>In the java code:</para>

        <programlisting>
public class VirtualGroupIdFactory implements SenseiPluginFactory&lt;List&lt;FacetHandler&gt;&gt; {
  @Override
  public List&lt;FacetHandler&gt; getBean(Map initProperties, String fullPrefix, SenseiPluginRegistry pluginRegistry) {
    List&lt;FacetHandler&gt; ret = new ArrayList&lt;FacetHandler&gt;(2);
    ret.add(new VirtualSimpleFacetHandler("virtual_groupid", new PredefinedTermListFactory(Long.class, "00000000000000000000000000000000000"), null, Collections.EMPTY_SET));
    ret.add(new VirtualSimpleFacetHandler("virtual_groupid_fixed", new TermFixedLengthLongArrayListFactory(2), null, Collections.EMPTY_SET));
    return ret;
  }
}
 
public class SimpleFacetHandlerFactory implements SenseiPluginFactory&lt;SimpleFacetHandler&gt; {
  @Override
  public SimpleFacetHandler getBean(Map&lt;String, String&gt; initProperties, String fullPrefix, SenseiPluginRegistry pluginRegistry) {
    return new SimpleFacetHandler(initProperties.get("facetName"), initProperties.get("fieldName"), null, Collections.EMPTY_SET);
  }
}  </programlisting>

        <para>And as the last step it needs to be wired together in the
        sensei.properties:</para>

        <programlisting>my.custom_facets.virtual_groupids.class=com.sensei.plugin.example.VirtualGroupIdFactory
 
my.custom_facets.groupid.class=com.sensei.plugin.example.SimpleFacetHandlerFactory
my.custom_facets.groupid.facetName=groupid
my.custom_facets.groupid.fieldName=groupid
 
my.custom_facets.tags.class=com.sensei.plugin.example.SimpleFacetHandlerFactory
my.custom_facets.tags.facetName=tags
my.custom_facets.tags.fieldName=tags
 
 
# beans might be referenced either by the simple name eg 'tags' or by the full key eg 'my.custom_facets.tags'
# Note that the virtual_groupids references not the single FacetHandler but the list of the facetHandlers returned by the VirtualGroupIdFactory
sensei.custom.facets.list= virtual_groupids, my.custom_facets.tags, groupid  </programlisting>
      </section>
    </section>

    <section>
      <title>Server Properties</title>

      <para>In the following sections, we are going to explain every
      configuration property in each part: what the property type is, whether
      it is required, what the default value is, and how it is used,
      etc.</para>

      <variablelist>
        <?dbfo list-presentation="blocks"?>

        <varlistentry>
          <term><emphasis role="bold">sensei.node.id</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the node ID of the Sensei node in a cluster.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.node.partitions</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String (comma separated integers or ranges)</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the partitions IDs this the Sensei server is
            going to handle. Partition IDs can be given as either integer
            numbers or ranges, separated by commas. For example, the following
            line denotes that the Sensei server has six partitions:
            1,4,5,6,7,10.</para>

            <programlisting>  sensei.node.partitions=1,4-7,10</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.server.port</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the Sensei server port number.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.server.requestThreadCorePoolSize</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 20</para>
              </listitem>
            </itemizedlist>

            <para>This is the core size of thread pool used to execute
            requests.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.server.requestThreadKeepAliveTimeSecs</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 300</para>
              </listitem>
            </itemizedlist>

            <para>This is the length of time in seconds to keep an idle
            request thread alive.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.server.requestThreadMaxPoolSize</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 70</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum size of thread pool used to execute
            requests.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Cluster Properties</title>

      <variablelist>
        <?dbfo list-presentation="blocks"?>

        <varlistentry>
          <term><emphasis role="bold">sensei.cluster.name</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the name of the Sensei server cluster.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.cluster.timeout</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 300000</para>
              </listitem>
            </itemizedlist>

            <para>This is the session timeout value, in milliseconds, that is
            passed to ZooKeeper.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.cluster.url</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the ZooKeeper URL for the Sensei cluster.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <!-- Indexing Properties -->

    <section>
      <title>Indexing Properties</title>

      <variablelist>
        <?dbfo list-presentation="blocks"?>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.analyzer.class</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.analyzer.class</emphasis> in <xref
            linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.batchDelay</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 300000</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum time to wait in milliseconds before
            flushing index events to disk. The default value is 300000 (i.e. 5
            minutes).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.index.batchSize</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 10000</para>
              </listitem>
            </itemizedlist>

            <para>This is the batch size to control the pace of data event
            consumption on the back-end. It is the <emphasis>soft</emphasis>
            size limit of each event batch. If the events come in too fast and
            the limit is already reached, then the indexer will block the
            incoming events until the number of buffered events drop below
            this limit after some of the events are sent to the background
            data consumer.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.custom.class</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.custom.class</emphasis> in <xref
            linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.index.directory</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the directory used to save the index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.index.freshness</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: long</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 500</para>
              </listitem>
            </itemizedlist>

            <para>This controls the freshness of entries in the index reader
            cache.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.interpreter.class</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.interpreter.class</emphasis> in <xref
            linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.index.manager</emphasis></term>

          <listitem>
            <para>See <emphasis role="bold">sensei.index.manager</emphasis> in
            <xref linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.default.batchSize</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 1</para>
              </listitem>
            </itemizedlist>

            <para>This is the batch size to control when data events
            accumulated in the default index manger should be consumed by the
            data consumer. The default value is 1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.default.eventsPerMin</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 40000</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum number of data events that the indexer
            can consume per minute. If this threshold is exceeded, the indexer
            will pause for a short period of time before continuing to consume
            incoming data events.</para>

            <para>This property is helpful in preventing the indexer from
            being overloaded. The default value is 40,000.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.default.maxpartition.id</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: Yes, if the default indexing manager is
                chosen; No, otherwise.</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum partition ID number served by this
            Sensei cluster if the default Sensei indexing manager is
            used.</para>

            <warning>
              <para>This property is different from the total number of
              partitions in a Sensei cluster. For example, if a cluster
              contains 4 partitions, 0, 1, 2, and 3, then <emphasis
              role="bold">sensei.index.manager.default.maxpartition.id</emphasis>
              should be set to 3.</para>
            </warning>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.default.shardingStrategy.class</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.manager.default.shardingStrategy.class</emphasis>
            in <xref linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.default.type</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.manager.default.type</emphasis> in <xref
            linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.maxBatchSize</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 10000</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum number of incoming data events that can
            be held by the indexer in a batch before they are flushed to disk.
            If this number is exceeded, the indexer will stop processing the
            data events for one minute.</para>

            <!-- XXX one minute always ?? -->
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.index.realtime</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: boolean</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: true</para>
              </listitem>
            </itemizedlist>

            <para>This specifies whether the indexing mode is real-time or
            not.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.similarity.class</emphasis></term>

          <listitem>
            <para>See <emphasis
            role="bold">sensei.index.similarity.class</emphasis> in <xref
            linkend="sect-plugin-props" />.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis

          role="bold">sensei.indexer.type</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>

                <para>Type: string</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the internal indexer type used by the Sensei
            cluster. Currently only two options are supported:
            <literal>zoie</literal> and <literal>hourglass</literal>. If
            <literal>hourglass</literal> is used, three more properties need
            to be set too:</para>

            <orderedlist spacing="compact">
              <listitem>
                <para><emphasis
                role="bold">sensei.indexer.hourglass.schedule</emphasis></para>
              </listitem>

              <listitem>
                <para><emphasis
                role="bold">sensei.indexer.hourglass.trimthreshold</emphasis></para>
              </listitem>

              <listitem>
                <para><emphasis
                role="bold">sensei.indexer.hourglass.frequency</emphasis></para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.indexer.hourglass.frequency</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: "<literal>day</literal>"</para>
              </listitem>
            </itemizedlist>

            <para>This is the rolling forward frequency. It has to be one of
            the following three values:</para>

            <itemizedlist spacing="compact">
              <listitem>
                <para><literal>day</literal></para>
              </listitem>

              <listitem>
                <para><literal>hour</literal></para>
              </listitem>

              <listitem>
                <para><literal>minute</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.indexer.hourglass.schedule</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes, if property <emphasis
                role="bold">sensei.indexer.type</emphasis> is set to
                "<literal>hourglass</literal>"; No, otherwise.</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is a string that specifies Hourglass rolling forward
            schedule. The format of this string is "<literal>ss mm
            hh</literal>", meaning at <literal>hh:mm:ss time</literal> of the
            day that we roll forward for <emphasis>daily</emphasis> rolling.
            If it is <emphasis>hourly</emphasis> rolling, we roll forward at
            <literal>mm:ss</literal> time of the hour. If it is
            <emphasis>minutely</emphasis> rolling, we roll forward at
            <literal>ss</literal> seond of the minute.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.indexer.hourglass.trimthreshold</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 14</para>
              </listitem>
            </itemizedlist>

            <para>This is the retention period for how long we are going to
            keep the events in the index. The unit is the rolling
            period.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>Broker and Client Properties</title>

      <variablelist>
        <?dbfo list-presentation="blocks"?>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.broker.maxThread</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 50</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum size of thread pool used by a broker to
            execute requests.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.broker.maxWaittime</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 2000</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum idle time in milliseconds for a thread
            on a broker. Threads that are idle for longer than this period may
            be stopped.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.broker.minThread</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 20</para>
              </listitem>
            </itemizedlist>

            <para>This is the core size of thread pool used by the broker to
            execute requests.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.broker.port</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the port number of the Sensei broker.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.broker.webapp.path</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the resource base of the broker web
            application.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.zookeeper.url</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the ZooKeeper URL for the Sensei search cluster that
            a broker talks to.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.name</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: String</para>
              </listitem>

              <listitem>
                <para>Required: Yes</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the Sensei cluster name, i.e. the service name for
            the network clients and brokers.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.zookeeper.conn.timeout</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 10000</para>
              </listitem>
            </itemizedlist>

            <para>This is the ZooKeeper network client session timeout value
            in milliseconds.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.network.conn.timeout</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 1000</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum number of milliseconds to allow a
            connection attempt to take.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.network.write.timeout</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 150</para>
              </listitem>
            </itemizedlist>

            <para>This is the number of milliseconds a request can be queued
            for write before it is considered stale.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.network.max.conn.per.node</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 5</para>
              </listitem>
            </itemizedlist>

            <para>This is the maximum number of open connections to a
            node.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.network.stale.timeout.mins</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 10</para>
              </listitem>
            </itemizedlist>

            <para>This is the number of minutes to keep a request that is
            waiting for a response.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.cluster.network.stale.cleanup.freq.mins</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: int</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: 10</para>
              </listitem>
            </itemizedlist>

            <para>This is the frequency to clean up stale requests.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <!-- Plug-in Properties -->

    <section xml:id="sect-plugin-props">
      <title>Plug-in Properties</title>

      <variablelist>
        <?dbfo list-presentation="blocks"?>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.analyzer.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the class name of the analyzer plug-in for
            analyzing text. If not specified,
            <literal>org.apache.lucene.analysis.standard.StandardAnalyzer</literal>
            will be used.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.similarity.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the class name of similarity plug-in for
            Lucene scoring. If not specified,
            <literal>org.apache.lucene.search.DefaultSimilarity</literal> is
            used.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.custom.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the class name of the custom indexing
            pipeline <indexterm>
                <primary>custom indexing pipeline</primary>
              </indexterm> implementation. A custom indexing pipeline can be
            plugged into the indexing process to allow users to modify
            generated Lucene documents at the last step before they are
            indexed.</para>

            <para>A custom indexing pipeline has to implement interface
            <classname>com.sensei.indexing.api.CustomIndexingPipeline</classname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.interpreter.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the bean ID of the interpretor of Zoie
            indexables. If not specified,
            <literal>com.sensei.indexing.api.DefaultJsonSchemaInterpreter</literal>
            is used.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the class name of the indexing manager object
            implementing
            <literal>com.sensei.search.nodes.SenseiIndexingManager</literal>.
            If not specified,
            <literal>com.sensei.indexing.api.DefaultStreamingIndexingManager</literal>
            is used.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis role="bold">sensei.gateway.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: Yes if <emphasis
                role="bold">sensei.gateway.class</emphasis> is not specified,
                i.e. the default indexing manager is used.</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the type of gateway that will be used by the
            default indexing manager. The value identifies the name of of the
            class extending
            <literal>com.sensei.indexing.api.gateway.SenseiGateway</literal>.</para>

            <para>Several built-in gateways are provided by Sensei, but you
            can always define your own based on your need. No matter a
            built-in gateway or a custom gateway is used, additional
            parameters can be specified under the names with prefix <emphasis
            role="bold">sensei.index.manager.class.<emphasis>&lt;gateway-type&gt;</emphasis></emphasis>.</para>

            <para>Currently the following built-in gateway types are
            supported:</para>

            <itemizedlist>
              <listitem>
                <para><literal>file</literal>:</para>

                <para>This type of gateway takes a regular text file as the
                input. Each line in the file contains a data entry in JSON
                format.</para>

                <para>Only one property needs to be set for this gateway type.
                See <xref linkend="sect-file-gateway-props" /></para>
              </listitem>

              <listitem>
                <para><literal>kafka</literal>:</para>

                <para>This type of gateway takes Kafka messages as
                input.</para>

                <para>See <xref linkend="sect-kafka-gateway-props" /> for
                additional property information.</para>
              </listitem>

              <listitem>
                <para><literal>jms</literal>:</para>

                <para>This type of gateway takes JMS (Java Messages Service)
                messages as input. The publish-and-subscribe messaging model
                is used by Sensei, so parameters like topic need to be
                provided.</para>

                <para>See <xref linkend="sect-jms-gateway-props" /> for
                additional property information.</para>
              </listitem>

              <listitem>
                <para><literal>jdbc</literal>:</para>

                <para>This type of gateway takes JDBC data as input.</para>

                <para>See <xref linkend="sect-jdbc-gateway-props" /> for
                additional property information.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.index.manager.filter.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: None</para>
              </listitem>
            </itemizedlist>

            <para>This is the name of the class extending the
            <literal>com.sensei.indexing.api.DataSourceFilter</literal> . No
            matter what gateway type the indexing managers uses, a filter can
            be plugged in to get the original source data converted to the
            JSON format defined by the table schema. If the input data is
            already in the right format, then this filter is not
            needed.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.sharding.strategy.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This is the class name of the sharding strategy.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.search.router.factory.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This is the class name of the Sensei request router factory.
            This factory builds the load balancer that is used by Sensei
            brokers to route incoming requests to different Sensei
            nodes.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><emphasis
          role="bold">sensei.version.comparator.class</emphasis></term>

          <listitem>
            <itemizedlist spacing="compact">
              <listitem>
                <para>Type: Class</para>
              </listitem>

              <listitem>
                <para>Required: No</para>
              </listitem>

              <listitem>
                <para>Default: ""</para>
              </listitem>
            </itemizedlist>

            <para>This specifies the class name of version comparator plug-in
            to be used by the indexer. If not specified, Zoie's default
            version comparator is used.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <section xml:id="sect-file-gateway-props">
        <title>File Gateway Properties</title>

        <para>For <literal>file</literal> gateway, the following property has
        to be specified:</para>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.file.path</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the path to the input data file.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>

      <section xml:id="sect-kafka-gateway-props">
        <title>Kafka Gateway Properties</title>

        <para>For <literal>kafka</literal> gateway, the following properties
        should/can be specified: <footnote>
            <para>These properties are basically the parameters needed by the
            Kafka consumer API. The Simple Consumer API from Kafka is used by
            Sensei.</para>
          </footnote></para>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.kafka.batchsize</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the batch size for each pull request.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.kafka.host</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the host name of the Kafka server.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.kafka.port</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the port number on which the Kafka server is
              listening for connections.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.kafka.timeout</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: 10000</para>
                </listitem>
              </itemizedlist>

              <para>This is the socket timeout in milliseconds.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.kafka.topic</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>The topic of the messages to be fetched.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- kafka gateway properties -->
      </section>

      <section xml:id="sect-jms-gateway-props">
        <title>JMS Gateway Properties</title>

        <para>For <literal>jms</literal> gateway, the following properties
        should/can be specified:</para>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jms.clientId</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the client identifier used to connect to the JMS
              provider.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jms.topic</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the topic name that the JMS client subscribes
              to.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jms.topicFactory</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the bean ID of the
              <literal>com.linkedin.zoie.dataprovider.jms.TopicFactory</literal>
              object. This object is used to generate a topic object based on
              the given topic name.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jms.connectionFactory.class</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: Class</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the class name of the
              <literal>javax.jms.TopicConnectionFactory</literal> object,
              which is used by the JMS client to create a
              <literal>javax.jms.TopicConnection</literal> object with the JMS
              provider.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- jms gateway properties -->
      </section>

      <section xml:id="sect-jdbc-gateway-props">
        <title>JDBC Gateway Properties</title>

        <para>For <literal>jdbc</literal> gateway, the following properties
        should/can be specified:</para>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jdbc.adaptor</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: Class</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the bean ID of the
              <literal>com.sensei.indexing.api.jdbc.SenseiJDBCAdaptor</literal>
              object. This object is used to build a
              <literal>com.linkedin.zoie.dataprovider.jdbc.PreparedStatementBuilder</literal>
              object, which is required by
              <literal>com.linkedin.zoie.dataprovider.jdbc.JDBCStreamDataProvider</literal>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jdbc.driver</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the class name of the JDBC driver that you want to
              use.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jdbc.password</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the password for the user name that you use to
              connect to the database.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis
            role="bold">sensei.gateway.jdbc.username</emphasis></term>

            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>

                <listitem>
                  <para>Required: Yes</para>
                </listitem>

                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the user name that you use to connect to the
              database.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- jdbc gateway properties -->
      </section>
    </section>
  </section>
</chapter>